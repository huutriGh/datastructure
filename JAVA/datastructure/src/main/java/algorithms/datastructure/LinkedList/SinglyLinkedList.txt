* A linked list, in its simplest form, is a collection of nodes that collectively form linear sequency.
* In singly linked list, each node store a reference to a an object that is an element of the sequency, as well as a reference to the next node of the list.
* The first node of the list, known as the head. without an explicit reference to the head, there would be no way to locate that node.
* The last node of the list is know as the tail. The tail of a list can be found by traversing the linked list - starting at the head and moving from one to another
by following each node's next reference. We can identify the tail as node having null as its next reference. this process is also known as link hopping or pointer hopping.
However, storing an explicit reference to the tail node is common way efficiency to avoid such a traversal.
* An important property of a linked list is that it does not have predetermined fixed size. it use space proportional to its current number of elements.